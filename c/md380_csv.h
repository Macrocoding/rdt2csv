/* Generated by Macrocoder - do not edit */
#ifndef md380_csv_h
#define md380_csv_h

#include "md380.h"
#include "md380_tools.h"
#include "md380_cli.h"

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_ChannelInformation (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_ChannelInformation (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_ChannelInformation* record, char** errorMessage);

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_DigitalContact (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_DigitalContact (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_DigitalContact* record, char** errorMessage);

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_DigitalRxGroupList (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_DigitalRxGroupList (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_DigitalRxGroupList* record, char** errorMessage);

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_GeneralSettings (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_GeneralSettings (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_GeneralSettings* record, char** errorMessage);

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_ScanList (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_ScanList (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_ScanList* record, char** errorMessage);

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_TextMessage (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_TextMessage (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_TextMessage* record, char** errorMessage);

/* Function that encodes a structure into a binary record. Parameters */
/* and return values are the same of 'csvWriteSeparator' */
extern int encodeCSVHeader_ZoneInformation (char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter);

/* Function that encodes a binary empty record. Parameters */
/* and return values are the same of 'csvWriteSeparator */
extern int encodeCSVRecord_ZoneInformation (unsigned lineNo, char separator, WriteBinaryFunc writeBinaryFunc, void* writeBinaryFuncParameter, const T_ZoneInformation* record, char** errorMessage);

#endif
