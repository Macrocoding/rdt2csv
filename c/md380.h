/* Generated by Macrocoder - do not edit */
#ifndef md380_h
#define md380_h
#include "binlib.h"
#include "csv.h"

/*============================================================================
	Structure used to describe each enumeration in a field
============================================================================*/
typedef struct {
	/* CRC-32 of the enumeration name (calculated all lower case) */
	unsigned enumNameCRC;
	
	/* Name of the enumeration */
	const char* enumName;
	
	/* Value associated to this enumeration */
	t_numeric enumValue;
	
} FieldEnumerator;
 
/*============================================================================
	Structure used to describe each field in a record.
============================================================================*/
typedef struct {
	/* CRC-32 of the field name (calculated all lower case) */
	unsigned fieldNameCRC;

	/* Type of the field */
	BinType	fieldType;
	
	/* Name of the field */
	const char* fieldName;
	
	/* Number of enumerations (0 if not enumerated) */
	unsigned enumCount;
	
	/* Pointer to the array of enumerations for this field or NULL if none */
	const FieldEnumerator* fieldEnumerators;
	
} FieldDescriptor;


#define FILE_SIZE_TRDTFile 262709

/* Macros for record  ChannelInformation */
#define OFFSET_ChannelInformation 127013
#define LENGTH_ChannelInformation 64
#define COUNT_ChannelInformation 1000
#define FIELDS_ChannelInformation 37

/* Structure for record ChannelInformation */
typedef struct {
	t_numeric LoneWorker;
	t_numeric Squelch;
	t_numeric Autoscan;
	t_numeric Bandwidth;
	t_numeric ChannelMode;
	t_numeric Colorcode;
	t_numeric RepeaterSlot;
	t_numeric RxOnly;
	t_numeric AllowTalkaround;
	t_numeric DataCallConf;
	t_numeric PrivateCallConf;
	t_numeric Privacy;
	t_numeric PrivacyNo;
	t_numeric DisplayPttId;
	t_numeric CompressedUdpHdr;
	t_numeric EmergencyAlarmAck;
	t_numeric RxRefFrequency;
	t_numeric AdmintCriteria;
	t_numeric Power;
	t_numeric Vox;
	t_numeric QtReverse;
	t_numeric ReverseBurst;
	t_numeric TxRefFrequency;
	t_reference ContactName;
	t_numeric Tot;
	t_numeric TotRekeyDelay;
	t_numeric EmergencySystem;
	t_reference ScanList;
	t_reference GroupList;
	t_numeric Decode18;
	t_numeric RxFrequency;
	t_numeric TxFrequency;
	t_numeric CtcssDcsDecode;
	t_numeric CtcssDcsEncode;
	t_numeric TxSignalingSyst;
	t_numeric RxSignalingSyst;
	t_unicode Name [17];
} T_ChannelInformation;

extern FieldDescriptor DESC_ChannelInformation [FIELDS_ChannelInformation];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_ChannelInformation (const t_buffer* buffer, unsigned offsetInOctets, T_ChannelInformation* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_ChannelInformation (t_buffer* buffer, unsigned offsetInOctets, const T_ChannelInformation* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_ChannelInformation (t_buffer* buffer, unsigned offsetInOctets);

/* Macros for record  DigitalContact */
#define OFFSET_DigitalContact 24997
#define LENGTH_DigitalContact 36
#define COUNT_DigitalContact 1000
#define FIELDS_DigitalContact 4

/* Structure for record DigitalContact */
typedef struct {
	t_numeric CallId;
	t_numeric CallReceiveTone;
	t_numeric CallType;
	t_unicode Name [17];
} T_DigitalContact;

extern FieldDescriptor DESC_DigitalContact [FIELDS_DigitalContact];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_DigitalContact (const t_buffer* buffer, unsigned offsetInOctets, T_DigitalContact* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_DigitalContact (t_buffer* buffer, unsigned offsetInOctets, const T_DigitalContact* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_DigitalContact (t_buffer* buffer, unsigned offsetInOctets);

/* Macros for record  DigitalRxGroupList */
#define OFFSET_DigitalRxGroupList 60997
#define LENGTH_DigitalRxGroupList 96
#define COUNT_DigitalRxGroupList 250
#define FIELDS_DigitalRxGroupList 33

/* Structure for record DigitalRxGroupList */
typedef struct {
	t_unicode Name [17];
	t_reference ContactMember[32];
} T_DigitalRxGroupList;

extern FieldDescriptor DESC_DigitalRxGroupList [FIELDS_DigitalRxGroupList];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_DigitalRxGroupList (const t_buffer* buffer, unsigned offsetInOctets, T_DigitalRxGroupList* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_DigitalRxGroupList (t_buffer* buffer, unsigned offsetInOctets, const T_DigitalRxGroupList* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_DigitalRxGroupList (t_buffer* buffer, unsigned offsetInOctets);

/* Macros for record  GeneralSettings */
#define OFFSET_GeneralSettings 8805
#define LENGTH_GeneralSettings 144
#define COUNT_GeneralSettings 1
#define FIELDS_GeneralSettings 29

/* Structure for record GeneralSettings */
typedef struct {
	t_unicode InfoScreenLine1 [11];
	t_unicode InfoScreenLine2 [11];
	t_numeric MonitorType;
	t_numeric DisableAllLeds;
	t_numeric TalkPermitTone;
	t_numeric PasswordAndLockEnable;
	t_numeric CHFreeIndicationTone;
	t_numeric DisableAllTone;
	t_numeric SaveModeReceive;
	t_numeric SavePreamble;
	t_numeric IntroScreen;
	t_numeric RadioId;
	t_numeric TxPreamble;
	t_numeric GroupCallHangTime;
	t_numeric PrivateCallHangTime;
	t_numeric VoxSensitivity;
	t_numeric RxLowBatteryInterval;
	t_numeric CallAlertTone;
	t_numeric LoneWorkerRespTime;
	t_numeric LoneWorkerReminderTime;
	t_numeric ScanDigitalHangTime;
	t_numeric ScanAnalogHangTime;
	t_numeric Unknown1;
	t_numeric KeypadLockTime;
	t_numeric Mode;
	t_numeric PowerOnPassword;
	t_numeric RadioProgPassowrd;
	t_unicode PcProgPassword [9];
	t_unicode RadioName [17];
} T_GeneralSettings;

extern FieldDescriptor DESC_GeneralSettings [FIELDS_GeneralSettings];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_GeneralSettings (const t_buffer* buffer, unsigned offsetInOctets, T_GeneralSettings* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_GeneralSettings (t_buffer* buffer, unsigned offsetInOctets, const T_GeneralSettings* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_GeneralSettings (t_buffer* buffer, unsigned offsetInOctets);

/* Macros for record  ScanList */
#define OFFSET_ScanList 100997
#define LENGTH_ScanList 104
#define COUNT_ScanList 250
#define FIELDS_ScanList 37

/* Structure for record ScanList */
typedef struct {
	t_unicode Name [17];
	t_reference PriorityCh1;
	t_reference PriorityCh2;
	t_reference TXDesignatedCh;
	t_numeric SignHoldTime;
	t_numeric PrioSamplTime;
	t_reference ChannelMember[31];
} T_ScanList;

extern FieldDescriptor DESC_ScanList [FIELDS_ScanList];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_ScanList (const t_buffer* buffer, unsigned offsetInOctets, T_ScanList* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_ScanList (t_buffer* buffer, unsigned offsetInOctets, const T_ScanList* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_ScanList (t_buffer* buffer, unsigned offsetInOctets);

/* Macros for record  TextMessage */
#define OFFSET_TextMessage 9125
#define LENGTH_TextMessage 288
#define COUNT_TextMessage 50
#define FIELDS_TextMessage 1

/* Structure for record TextMessage */
typedef struct {
	t_unicode Text [145];
} T_TextMessage;

extern FieldDescriptor DESC_TextMessage [FIELDS_TextMessage];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_TextMessage (const t_buffer* buffer, unsigned offsetInOctets, T_TextMessage* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_TextMessage (t_buffer* buffer, unsigned offsetInOctets, const T_TextMessage* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_TextMessage (t_buffer* buffer, unsigned offsetInOctets);

/* Macros for record  ZoneInformation */
#define OFFSET_ZoneInformation 84997
#define LENGTH_ZoneInformation 64
#define COUNT_ZoneInformation 250
#define FIELDS_ZoneInformation 17

/* Structure for record ZoneInformation */
typedef struct {
	t_unicode Name [17];
	t_reference ChannelMember[16];
} T_ZoneInformation;

extern FieldDescriptor DESC_ZoneInformation [FIELDS_ZoneInformation];

/* Function that decodes a binary record into the structure */
extern void decodeBinary_ZoneInformation (const t_buffer* buffer, unsigned offsetInOctets, T_ZoneInformation* record);

/* Function that encodes a structure into a binary record */
extern void encodeBinary_ZoneInformation (t_buffer* buffer, unsigned offsetInOctets, const T_ZoneInformation* record);

/* Function that encodes a binary empty record */
extern void encodeBinaryEmpty_ZoneInformation (t_buffer* buffer, unsigned offsetInOctets);

/* Global structure */
typedef struct {
	T_ChannelInformation ChannelInformation[COUNT_ChannelInformation];
	unsigned ChannelInformation_COUNT;

	T_DigitalContact DigitalContact[COUNT_DigitalContact];
	unsigned DigitalContact_COUNT;

	T_DigitalRxGroupList DigitalRxGroupList[COUNT_DigitalRxGroupList];
	unsigned DigitalRxGroupList_COUNT;

	T_GeneralSettings GeneralSettings;

	T_ScanList ScanList[COUNT_ScanList];
	unsigned ScanList_COUNT;

	T_TextMessage TextMessage[COUNT_TextMessage];
	unsigned TextMessage_COUNT;

	T_ZoneInformation ZoneInformation[COUNT_ZoneInformation];
	unsigned ZoneInformation_COUNT;

} TRDTFile;

/* Decode a binary file; its size must be FILE_SIZE_TRDTFile */
extern void decodeBinary_TRDTFile (const t_buffer* buffer, TRDTFile* container);

/* Encode a binary file; its size must be FILE_SIZE_TRDTFile */
extern void encodeBinary_TRDTFile (t_buffer* buffer, const TRDTFile* container);

#endif
